{"version":3,"sources":["Bar.styles.js","Bar.js","App.styles.js","Functions/rang.js","Steps.js","Functions/helpers.js","Algorithms/selectionsort.js","Algorithms/main.js","Algorithms/bubblesort.js","Algorithms/insertionsort.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","main","props","height","num","width","backgroundColor","margin","color","display","alignItems","justifyContent","paddingBottom","transition","Bar","classes","className","theme","barContainer","marginTop","stepContainer","select","marginLeft","borderColor","bottomContainer","sliderContainer","padding","RNG","min","max","Math","floor","random","RANG","len","arr","i","randomNumber","push","Steps","currentStepIndex","nextStep","prevStep","togglePlayStep","replayStep","stepsLen","isPlaying","Button","variant","onClick","disabled","ArrowBackIos","Pause","Replay","PlayArrow","ArrowForwardIos","timeout","ms","Promise","resolve","setTimeout","swapArray","index1","index2","temp","selectionSort","newArr","slice","steps","compareSteps","length","swapped","j","swapArr","currentItem","App","createTheme","sortAlgorithms","name","id","useState","currentAlgorithm","setCurrentAlgorithm","RandomArrayNumberGenerator","setArr","setSteps","setCurrentStepIndex","compareStepsIndexes","setCompareStepsIndexes","speedMs","setSpeedMs","setIsPlaying","MakeRandomArr","randomArr","algorithms","useEffect","a","play","getCurrentColor","index","colors","palette","success","warning","secondary","currentColorArr","colorExist","indexOf","primary","AppBar","position","Toolbar","Typography","component","sx","flexGrow","Select","value","onChange","e","target","map","MenuItem","number","Slider","size","marks","label","valueLabelDisplay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76cc780b.chunk.js","sourcesContent":["import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    main: (props) => ({\r\n        height: props.num + 30 + 'px',\r\n        width: '45px',\r\n        backgroundColor: props.backgroundColor,\r\n        margin: '0px 5px',\r\n        color: props.color,\r\n        display: 'flex',\r\n        alignItems: 'end',\r\n        justifyContent: 'center',\r\n        paddingBottom: '10px',\r\n        transition: 'all 0.1s ease',\r\n    }),\r\n\r\n}));\r\n\r\nexport default useStyles","import React from 'react'\r\nimport useStyles from './Bar.styles'\r\nconst Bar = ({ num, color }) => {\r\n    const styleProps = {\r\n        backgroundColor: color,\r\n        color: 'white',\r\n        num\r\n    }\r\n    const classes = useStyles(styleProps)\r\n    // const styles = {\r\n    //     height: num + 30 + 'px',\r\n    //     width: '30px', background: color,\r\n    //     margin: '0px 5px',\r\n    //     color: 'white',\r\n    //     display: 'flex',\r\n    //     alignItems: 'end',\r\n    //     justifyContent: 'center',\r\n    //     paddingBottom: '10px'\r\n    // }\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <div>\r\n                {num}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bar\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    barContainer: {\r\n        display: 'flex',\r\n        alignItems: 'end',\r\n        justifyContent: 'center',\r\n        marginTop: 30,\r\n        height: 250\r\n    },\r\n    stepContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 30,\r\n    },\r\n    select: {\r\n        marginLeft: 10,\r\n        '&:before': {\r\n            borderColor: \"#fff\",\r\n        },\r\n        '&:after': {\r\n            borderColor: \"#fff\",\r\n        },\r\n        color: \"#fff\"\r\n    },\r\n    bottomContainer: {\r\n        margin: '20px',\r\n        display: 'flex',\r\n    },\r\n    sliderContainer: {\r\n        width: '10%',\r\n        padding: '0px 20px'\r\n    }\r\n\r\n}));\r\n\r\nexport default useStyles","// Random Array Number generator\r\n\r\nconst RNG = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nconst RANG = (len, min, max) => {\r\n    const arr = []\r\n    for (let i = 0; i < len; i++) {\r\n        const randomNumber = RNG(min, max)\r\n        arr.push(randomNumber)\r\n    }\r\n    return arr\r\n}\r\n\r\nexport default RANG","import { Button } from '@mui/material'\r\nimport React from 'react'\r\n// import useStyles from './Steps.styles'\r\nimport { ArrowBackIos, ArrowForwardIos, PlayArrow, Pause, Replay } from '@mui/icons-material';\r\n\r\nconst Steps = ({ currentStepIndex, nextStep, prevStep, togglePlayStep, replayStep, stepsLen, isPlaying }) => {\r\n    // const classes = useStyles()\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={prevStep} disabled={currentStepIndex === 0}><ArrowBackIos /></Button>\r\n            {\r\n                isPlaying ? (<Button variant=\"outlined\" onClick={togglePlayStep}><Pause /></Button>)\r\n                    : currentStepIndex === stepsLen - 1 ? (<Button variant=\"outlined\" onClick={replayStep}><Replay /></Button>)\r\n                        : (<Button variant=\"outlined\" onClick={togglePlayStep}><PlayArrow /></Button>)\r\n            }\r\n\r\n            <Button variant=\"outlined\" onClick={nextStep} disabled={currentStepIndex === stepsLen - 1}><ArrowForwardIos /></Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Steps\r\n","const swapArray = (arr, index1, index2) => {\r\n    let temp = arr[index1]\r\n    arr[index1] = arr[index2]\r\n    arr[index2] = temp\r\n}\r\nexport const timeout = (ms) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nexport default swapArray\r\n","import swapArr from \"../Functions/helpers\"\r\nfunction selectionSort(arr) {\r\n    // loop arr\r\n    const newArr = arr.slice()\r\n    const steps = [[...newArr]]\r\n    const compareSteps = [[-1, -1]]\r\n    for (let i = 0; i < newArr.length; i++) {\r\n        // save current item to min var\r\n        let min = i\r\n        // loop starting from second item\r\n        for (let j = i + 1; j < newArr.length; j++) {\r\n            // check if second item lesser than min\r\n            steps.push([...newArr])\r\n            compareSteps.push([i - 1, min, j])\r\n            if (newArr[j] < newArr[min]) {\r\n                min = j\r\n                steps.push([...newArr])\r\n                compareSteps.push([i - 1, min, j])\r\n            }\r\n            // if yes, set it to min\r\n\r\n\r\n        }\r\n        if (min !== i) {\r\n            steps.push([...newArr])\r\n            compareSteps.push([i, min])\r\n            swapArr(newArr, i, min)\r\n            steps.push([...newArr])\r\n            compareSteps.push([min, i])\r\n        }\r\n        // swap min to current item\r\n    }\r\n    compareSteps.push([])\r\n    return { steps, compareSteps }\r\n}\r\n\r\n\r\nexport default selectionSort","import bubbleSort from \"./bubblesort\";\r\nimport insertionSort from \"./insertionsort\";\r\nimport selectionSort from \"./selectionsort\";\r\n\r\nexport default {\r\n    'bubblesort': bubbleSort,\r\n    'selectionsort': selectionSort,\r\n    'insertionsort': insertionSort\r\n}","import swapArr from \"../Functions/helpers\"\r\n// make bubble sort\r\n\r\n// save all steps of the array to an array\r\n// bubbleSort([7,1,3,6])\r\n// [7,1,3,6]\r\n// [1,7,3,6]\r\n// [1,3,6,7]\r\n\r\n// return [[7,1,3,6], [1,7,3,6], [1,3,6,7]]\r\n\r\nconst bubbleSort = (arr) => {\r\n    // loop each array data\r\n    // [7,1,3,6]\r\n    // make new arr to not modify state arr\r\n    const newArr = arr.slice()\r\n    const steps = [[...newArr]]\r\n    const compareSteps = [[-1, -1]]\r\n    for (let i = 0; i < newArr.length; i++) {\r\n        let swapped = false\r\n        for (let j = 0; j < newArr.length - i; j++) {\r\n            // check if currentIndex data \"7\" is greater than next index data \"1\"\r\n            // if it is, swap both items\r\n            if (newArr[j] > newArr[j + 1]) {\r\n                steps.push([...newArr])\r\n                compareSteps.push([j + 1, j])\r\n                swapArr(newArr, j, j + 1)\r\n                swapped = true\r\n                // compareSteps.push([i, j])\r\n            }\r\n            compareSteps.push([j, j + 1])\r\n            steps.push([...newArr])\r\n            // console.log(i, j, \"[]\", newArr[i], newArr[j])\r\n            // if its not, continue.\r\n        }\r\n        if (!swapped) break;\r\n\r\n    }\r\n    compareSteps.push([])\r\n    return { steps, compareSteps }\r\n}\r\n\r\n\r\nexport default bubbleSort","function insertionSort(arr) {\r\n    // loop arr\r\n    const newArr = arr.slice()\r\n    const steps = [[...newArr]]\r\n    const compareSteps = [[-1, -1]]\r\n    for (let i = 1; i < newArr.length; i++) {\r\n        // save newArr[i] to currentItem variable\r\n        let currentItem = newArr[i];\r\n        let j = i - 1\r\n        // example i = 3 {last index of newArr}\r\n        // compare it to 2, or i - 1 up to zero\r\n        while (j > -1 && newArr[j] > currentItem) {\r\n            newArr[j + 1] = newArr[j]\r\n            steps.push([...newArr])\r\n            // compareSteps.push([i, j])\r\n            j--\r\n\r\n        }\r\n        newArr[j + 1] = currentItem\r\n        steps.push([...newArr])\r\n        // compareSteps.push([i, j])\r\n    }\r\n    compareSteps.push([])\r\n    return { steps, compareSteps }\r\n}\r\n\r\n\r\nexport default insertionSort","import './App.css';\nimport React, { useEffect, useState } from 'react'\nimport Bar from './Bar';\nimport AppBar from '@mui/material/AppBar'\nimport { Button, createTheme, FormControl, InputLabel, MenuItem, Select, Slider, Toolbar, Typography } from '@mui/material';\nimport useStyles from './App.styles'\nimport RandomArrayNumberGenerator from './Functions/rang'\nimport Steps from './Steps';\nimport algorithms from './Algorithms/main';\nimport { timeout } from './Functions/helpers';\n\n\nfunction App() {\n  const theme = createTheme()\n  const classes = useStyles()\n  const sortAlgorithms = [{ name: 'Bubble Sort', id: 'bubblesort' }, { name: 'Selection Sort', id: 'selectionsort' }, { name: 'Insertion Sort', id: 'insertionsort' }]\n  const [currentAlgorithm, setCurrentAlgorithm] = useState(sortAlgorithms[0].id)\n  // Make random number on first render\n  const [arr, setArr] = useState(RandomArrayNumberGenerator(15, 50, 200))\n  const [steps, setSteps] = useState([[...arr]])\n  const [currentStepIndex, setCurrentStepIndex] = useState(0)\n  const [compareStepsIndexes, setCompareStepsIndexes] = useState([[-1, -1]])\n  const [speedMs, setSpeedMs] = useState(50)\n  const [isPlaying, setIsPlaying] = useState(false)\n\n  const MakeRandomArr = () => {\n    const randomArr = RandomArrayNumberGenerator(15, 50, 200)\n    setArr(randomArr)\n    const { steps, compareSteps } = algorithms[currentAlgorithm](randomArr)\n    setSteps(steps)\n    setCompareStepsIndexes(compareSteps)\n    setCurrentStepIndex(0)\n  }\n\n  // generates the steps of the arr\n  useEffect(() => {\n    const { steps, compareSteps } = algorithms[currentAlgorithm](arr)\n    setSteps(steps)\n    setCompareStepsIndexes(compareSteps)\n  }, [currentAlgorithm])\n\n  // syncs the steps with the index\n  useEffect(() => {\n    setArr(steps[currentStepIndex])\n  }, [currentStepIndex])\n\n  // check isPlaying and plays from current step\n  useEffect(() => {\n    async function play() {\n      if (isPlaying && currentStepIndex < steps.length - 1) {\n        await timeout(speedMs)\n        setCurrentStepIndex(currentStepIndex + 1)\n      } else {\n        setIsPlaying(false)\n      }\n\n    }\n    play()\n  }, [isPlaying, currentStepIndex, speedMs])\n\n  const nextStep = () => {\n    setCurrentStepIndex(currentStepIndex + 1)\n  }\n\n  const prevStep = () => {\n    setCurrentStepIndex(currentStepIndex - 1)\n  }\n\n  const togglePlayStep = () => {\n    setIsPlaying(!isPlaying)\n  }\n  const replayStep = () => {\n    setCurrentStepIndex(0)\n    setIsPlaying(true)\n  }\n\n  const getCurrentColor = (index) => {\n    const colors = [theme.palette.success.main, theme.palette.warning.main, theme.palette.secondary.main]\n    const currentColorArr = compareStepsIndexes[currentStepIndex]\n    if (currentColorArr) {\n\n      const colorExist = currentColorArr.indexOf(index)\n      if (colorExist !== -1) {\n        return colors[colorExist]\n      }\n    }\n    return theme.palette.primary.main\n    // }\n\n  }\n\n  const handleAlgoChange = (e) => {\n    setCurrentAlgorithm(e.target.value)\n    MakeRandomArr()\n  }\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Visual Sorting Algorithms\n          </Typography>\n          <Select\n            disabled={isPlaying}\n            // style={{ color: 'white' }}\n            className={classes.select}\n            variant='standard'\n            value={currentAlgorithm}\n            // label=\"Algorithm\"\n            onChange={handleAlgoChange}\n          >\n            {sortAlgorithms.map(i => (\n              <MenuItem value={i.id}>{i.name}</MenuItem>\n            ))}\n\n          </Select>\n          {/* </FormControl> */}\n        </Toolbar>\n      </AppBar>\n      {/* App bar */}\n\n      {/* Show Algorithm */}\n      <div className={classes.barContainer}>\n        {arr.map((number, i) => (\n          <Bar key={i} num={number} color={getCurrentColor(i)\n          } />\n        ))}\n      </div>\n\n      {/* Steps */}\n\n      <div className={classes.stepContainer}>\n        <Steps currentStepIndex={currentStepIndex}\n          nextStep={nextStep}\n          prevStep={prevStep}\n          togglePlayStep={togglePlayStep}\n          stepsLen={steps.length}\n          isPlaying={isPlaying}\n          replayStep={replayStep}\n        />\n      </div>\n\n      {/* Speed Slider below */}\n      <div className={classes.bottomContainer}>\n        <div className={classes.sliderContainer}>\n\n          <Slider\n            size=\"small\"\n            color=\"primary\"\n            value={speedMs}\n            onChange={(e, value) => {\n              setSpeedMs(value)\n            }}\n            min={50}\n            max={1000}\n            // step={100}\n            marks={[{ value: 50, label: '50ms' }, { value: 1000, label: '1s' }]}\n            valueLabelDisplay=\"on\"\n          />\n        </div>\n        <Button variant='outlined' color=\"primary\" onClick={MakeRandomArr} disabled={isPlaying}>Randomize</Button>\n\n      </div>\n    </div >\n  )\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}